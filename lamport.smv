MODULE channel
VAR
ASSIGN


MODULE thread(i, x, r)
VAR
    state : {non_critical, send_request, waiting_to_enter, critical, exit};
    -- request_queue : 
ASSIGN
    next(state) := case
                    state = non_critical : {non_critical, send_request};
                    state = send_request : waiting_to_enter;
                    state = waiting_to_enter & (condition_for_entering) : critical; -- TODO: evaluate condition_to_enter
                    state = waiting_to_enter : waiting_to_enter;
                    state = critical : {critical, exit};
                    state = exit : non_critical;
                   esac;

MODULE main
VAR
    x_main : 0 .. 1;
    run_t : array 0 .. 1 of boolean;
    t1 : thread(0, x_main, run_t);
    t2 : thread(1, x_main, run_t);

ASSIGN
    init(x_main) := 1;
    init(run_t[0]) := FALSE;
    init(run_t[1]) := FALSE;
